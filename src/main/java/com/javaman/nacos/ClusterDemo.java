package com.javaman.nacos;

/**
 * @author pengzhe
 * @date 2018-12-10 21:20
 * @description Nacos引入了集群的概念，在服务这个维度下面，可以对服务下的实例列表再做个划分。
 * 这在阿里巴巴内部非常普遍。一个典型的场景是这个服务下的实例，需要配置多种健康检查方式
 * ，有一些实例使用TCP的健康检查方式，另外一些使用HTTP的健康检查方式。
 * 另一个场景是，这个服务下挂载的机器分属不同的环境，
 * 我们希望能够在某些情况下（包括演练）将某个环境的流量全部切走，
 * 这样可以通过配置一个环境属于一个集群，来做到一次性切流。
 * 在客户端构建自定义集群，有一些陷阱需要小心。
 * 当前我们只有注册实例的接口，实例内部的cluster字段可以配置集群的属性。
 * 但是多个实例之间如果配置了不同的集群属性，这时候会发生什么呢？
 * Nacos只会接受第一次注册该集群所传入的集群属性，也就是说，先注册的实例，
 * 获得优先权，将它对应的集群信息注册到Nacos服务端。
 * 只有Nacos服务端已经存在该集群的配置，后续的注册请求里的集群信息，
 * 都会被忽略。为了确保你的应用保持预期的行为，
 * 请务必让同一个集群下的实例使用相同的集群配置。
 * <p>
 * 首先是集群对应的服务名，用来表示该集群所属的服务；
 * 然后是集群的名字、健康检查方式、默认的端口、默认的健康检查端口以及是否使用是的端口做健康检查。
 * 我们先来说简单的，默认端口表示注册时实例默认的端口，这个在客户端并没有体现，
 * 但是当使用API注册实例的时候，端口是可以不传入的，此时就会用这个默认端口作为实例的端口。
 * 然后是默认的健康检查端口，当健康检查方式中没有配置端口时，就会用这个端口来和实例通信，进行健康检查。
 * 下一个属性是是否使用实例端口做健康检查，如果设为true，
 * 则会使用实例注册的端口来和实例进行通信。最后一个属性是集群的元数据
 * ，Nacos支持多个维度的元数据，实例支持，集群支持，下面介绍的服务属性也支持。
 * 健康检查方式，客户端心跳是一种模式，由客户端主动上报健康状态。
 * 服务端检测是另外一种模式，Nacos目前支持三种：TCP、HTTP和MYSQL。
 * TCP方式会从Nacos服务端建立一个连接到实例，如果连接建立成功，则表示该实例健康。
 * HTTP方式则会从Nacos服务端想实例发起一个HTTP请求，可以配置的属性有访问的相对路径，
 * 访问的HTTP头部，这个头部使用竖线进行分割，以及预期的请求返回码，默认为200
 */

public class ClusterDemo {

    public static void main(String[] args) {

    }
}
